// Date: 03/11/2013 10:37:44 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package nicholls.minecraft.snowman;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class SnowManModel extends ModelBase
{
  //fields
    ModelRenderer Bottom;
    ModelRenderer Body;
    ModelRenderer Head;
    ModelRenderer HatBrim;
    ModelRenderer Hat;
    ModelRenderer Nose;
    ModelRenderer LeftArm;
    ModelRenderer RightArm;
  
  public SnowManModel()
  {
    textureWidth = 128;
    textureHeight = 64;
    
      Bottom = new ModelRenderer(this, 0, 0);
      Bottom.addBox(0F, 0F, 0F, 16, 16, 16);
      Bottom.setRotationPoint(-8F, 8F, -8F);
      Bottom.setTextureSize(128, 64);
      Bottom.mirror = true;
      setRotation(Bottom, 0F, 0F, 0F);
      Body = new ModelRenderer(this, 66, 0);
      Body.addBox(0F, 0F, 0F, 12, 12, 12);
      Body.setRotationPoint(-6F, -4F, -6F);
      Body.setTextureSize(128, 64);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      Head = new ModelRenderer(this, 0, 33);
      Head.addBox(0F, 0F, 0F, 8, 8, 8);
      Head.setRotationPoint(-4F, -12F, -4F);
      Head.setTextureSize(128, 64);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      HatBrim = new ModelRenderer(this, 65, 25);
      HatBrim.addBox(0F, 0F, 0F, 12, 1, 12);
      HatBrim.setRotationPoint(-6F, -13F, -6F);
      HatBrim.setTextureSize(128, 64);
      HatBrim.mirror = true;
      setRotation(HatBrim, 0F, 0F, 0F);
      Hat = new ModelRenderer(this, 34, 39);
      Hat.addBox(0F, 0F, 0F, 8, 10, 8);
      Hat.setRotationPoint(-4F, -23F, -4F);
      Hat.setTextureSize(128, 64);
      Hat.mirror = true;
      setRotation(Hat, 0F, 0F, 0F);
      Nose = new ModelRenderer(this, 0, 51);
      Nose.addBox(0F, 0F, 0F, 2, 2, 6);
      Nose.setRotationPoint(-1F, -8F, -10F);
      Nose.setTextureSize(128, 64);
      Nose.mirror = true;
      setRotation(Nose, 0F, 0F, 0F);
      LeftArm = new ModelRenderer(this, 71, 42);
      LeftArm.addBox(0F, 0F, 0F, 8, 1, 1);
      LeftArm.setRotationPoint(6F, 0F, 0F);
      LeftArm.setTextureSize(128, 64);
      LeftArm.mirror = true;
      setRotation(LeftArm, 0F, 0F, 0.1745329F);
      RightArm = new ModelRenderer(this, 71, 47);
      RightArm.addBox(-8F, 0F, 0F, 8, 1, 1);
      RightArm.setRotationPoint(-6F, 0F, 0F);
      RightArm.setTextureSize(128, 64);
      RightArm.mirror = true;
      setRotation(RightArm, 0F, 0F, -0.1745329F);
  }
  
  @Override
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Bottom.render(f5);
    Body.render(f5);
    Head.render(f5);
    HatBrim.render(f5);
    Hat.render(f5);
    Nose.render(f5);
    LeftArm.render(f5);
    RightArm.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  @Override
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}

